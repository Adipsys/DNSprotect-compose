version: '3.8'

volumes:
 dnsp_vol01:
 dnsp-db_vol01:
 #ssl-certificates_vol01:

services:
 dnsp-db:
    image: docker.adipsys.com:5000/dnsp-ha-db
    command: seed
    environment:
      - XTRABACKUP_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_ROOT_HOST=%
      #- FAKE_HEALTHCHECK=8081
    deploy:
      replicas: 1
      placement:
             max_replicas_per_node: 1
             constraints:
                 - node.role == manager
    volumes:
          - 'dnsp-db_vol01:/var/lib/mysql/'
         
# dnsp-db:
#    image: docker.adipsys.com:5000/dnsp-ha-db
#    command: node tasks.dnsp-db-seed,tasks.dnsp-db
#    environment:
#      - XTRABACKUP_PASSWORD=${MYSQL_ROOT_PASSWORD}
#      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
#      - MYSQL_ROOT_HOST=%
#    deploy:
#      restart_policy:
#           condition: none
#           delay: 5s
#           max_attempts: 3
#           window: 120s
#      replicas: 0
#      placement:
#             max_replicas_per_node: 1
#             constraints:
#                 - node.role != manager
#    volumes:
#          - 'dnsp-db_vol01:/var/lib/mysql/'

 dnsp-web:
    image: docker.adipsys.com:5000/dnsp-ha-web:${PRODUCT_VERSION}
    hostname: dnsp-node1
    environment:
         - OPERATOR=${OPERATOR}
         - SERVER_NAME=${SERVER_NAME}
         - SERVER_ALIAS=${SERVER_ALIAS}
         - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
         - ADMIN_PASSWD=${ADMIN_PASSWD}
    deploy:
      placement:
    #          max_replicas_per_node: 1
               constraints:
                   - node.role == manager
      labels:
             - "traefik.enable=false"
             - "traefik.http.routers.DNSP-admin-http.rule=Host(`${SERVER_NAME}`)"
             - "traefik.http.routers.DNSP-admin-http.entrypoints=web"
             
             - "traefik.http.routers.DNSP-admin-https.rule=Host(`${SERVER_NAME}`)"
             - "traefik.http.routers.DNSP-admin-https.entrypoints=websecure"
             - "traefik.http.routers.DNSP-admin-https.tls=true"
        #    - "traefik.http.routers.DNSP-adminoc-https.tls.certresolver=letsEncrypt"
             
             - "traefik.http.services.DNSP.loadbalancer.server.port=80"
             - "traefik.http.services.DNSP.loadbalancer.server.scheme=http"
             - "traefik.http.services.DNSP.loadbalancer.sticky=true"
             - "traefik.http.services.DNSP.loadbalancer.sticky.cookie.name=traefik"

             - "traefik.docker.network=traefik"
    ports:
              - ${WEB_IHM_PORT}:80
              - ${WEB_IHM_SSL_PORT}:443
    volumes:
              #- 'ssl-certificates_vol01:/root/ssl_certificates/'
              - '/root/ssl_certificates/:/root/ssl_certificates/'
              - 'dnsp_vol01:/etc/powerdns/'
              - 'dnsp_vol01:/lock/'
              - 'dnsp_vol01:/var/www/dnsp/public/uploads'
    depends_on:
         - "dnsp-db"

 dnsp-pdns:
      image: docker.adipsys.com:5000/dnsp-ha-pdns:${PRODUCT_VERSION}
      environment:
               - RSYSLOG_SERVER=${RSYSLOG_SERVER}
      deploy:
        replicas: 1
        placement:
                 max_replicas_per_node: 1
                 constraints:
                     - node.role == manager
      ports:
              - target: ${DNS_PORT}
                published: 53
                protocol: udp
                mode: host
      volumes:
              - 'dnsp_vol01:/etc/powerdns/'
              - 'dnsp_vol01:/logs/'
              - 'dnsp_vol01:/lock/'
      depends_on:
        - "dnsp-db"

 dnsp-es:
      environment:
         - discovery.type=single-node
      deploy:
        replicas: 1
        placement:
             max_replicas_per_node: 1
        #     constraints:
        #         - node.role != manager
      image: docker.adipsys.com:5000/dnsp-ha-es:${PRODUCT_VERSION}

 dnsp-ls:
      image: docker.adipsys.com:5000/dnsp-ha-ls:${PRODUCT_VERSION}
      environment:
         - discovery.type=single-node
      deploy:
          replicas: 1
          placement:
              max_replicas_per_node: 1
    #             constraints:
    #                 - node.role != manager
      depends_on:
              - "dnsp-es"

 dnsp-fb:
      image: docker.adipsys.com:5000/dnsp-ha-fb:${PRODUCT_VERSION}
      deploy:
          replicas: 1
          placement:
              max_replicas_per_node: 1
                 #constraints:
                 #    - node.role == manager
      volumes:
              - 'dnsp_vol01:/logs/'
      depends_on:
              - "dnsp-es"
              - "dnsp-ls"
